name: Release (Cleanup)
run-name: |
  release cleanup [${{github.ref_type == 'tag' && 'stable' || 'nightly' }}, ${{github.ref_name}}]

on:
  workflow_dispatch:

  workflow_run:
    workflows: ["Release"]
    types: [completed]
    branches: [master]

concurrency:
  group: release-cleanup-${{ github.ref }}
  cancel-in-progress: false

permissions:
  actions: write
  packages: read

env:
  CLONE_DIR: src/repo

jobs:
  cleanup_jobs:
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true

      - name: Configure workflow
        id: config
        shell: python
        run: |
          import sys
          sys.path.insert(0, "${{ env.CLONE_DIR }}/.github")
          from workflows_pyconfig import configure
          configure(
            github="""${{ toJson(github) }}""",
            outputs="""\
              ADMIN_IMAGE = cfg.ci.admin_image
            """)

      - name: "Clean up workflow runs"
        run: |
          docker run --rm \
            -v $(pwd):/workspace \
            -e GH_TOKEN=${GH_TOKEN} \
            -w /workspace \
            ${{steps.config.outputs.ADMIN_IMAGE}} \
            ${{ env.CLONE_DIR }}/scripts/ci-admin \
              -c ${{ github.run_id }} \
              nightly-cleanup \
              -r ${{ github.repository }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

