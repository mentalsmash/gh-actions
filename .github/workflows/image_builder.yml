name: Images Builder
run-name: |
  docker build (${{ inputs.push && 'push' && 'test' }}) [${{ inputs.image-repos }}:${{ inputs.image-tags-config }} from ${{ inputs.base-image }} on ${{ inputs.build-platforms }}${{ inputs.image-flavor-config && ', with flavor ' || '' }}${{ inputs.image-flavor-config }}]

on:
  workflow_dispatch:
    inputs:
      dockerfile:
        description: Dockerfile to use (relative to workspace root)
        type: string
        required: true
      image-repos:
        description: List of image repositories (;)
        type: string
        required: true
      image-tags-config:
        description: list of image tag configurations (;)
        type: string
        default: ''
      image-flavor-config:
        description: list of image flavor configurations (;)
        type: string
        default: ''
      base-image:
        description: Base image (repo:tag)
        type: string
        required: true
      login-github:
        description: Log in to GitHub before pushing
        type: boolean
        default: true
      login-dockerhub:
        description: Log in to DockerHub before pushing
        type: boolean
        default: true
      push:
        description: Push images to their registries
        type: boolean
        default: false
      build-platforms:
        description: Docker build platforms expression (,)
        type: string
        required: true

  workflow_call:
    inputs:
      dockerfile:
        type: string
        required: true
      image-repos:
        type: string
        required: true
      image-tags-config:
        type: string
        default: ''
      image-flavor-config:
        type: string
        default: ''
      base-image:
        type: string
        required: true
      login-github:
        type: boolean
        default: false
      login-dockerhub:
        type: boolean
        default: false
      push:
        type: boolean
        default: false
      build-platforms:
        type: string
        required: true

concurrency:
  group: image-builder-${{ github.ref }}-${{inputs.image-repos}}-${{inputs.image-tags-config}}-${{inputs.image-flavor-config}}-${{ inputs.push && 'push' && 'test' }}
  cancel-in-progress: true

permissions:
  # Packages write permissions can be removed if not pushing to github
  packages: write
  contents: read

env:
  CLONE_DIR: src/repo

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub
        uses: docker/login-action@v3
        if: inputs.login-github
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        if: inputs.login-dockerhub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate build arguments
        id: build-args
        run: |
          (
            if [ -z "${{ inputs.image-tags-config}}" ]; then
              # Automatically derive tag from base image if no config provided
              echo IMAGE_TAGS=$(echo "${{ inputs.base-image}}" | tr / - | tr : -)
            else
              echo "IMAGE_TAGS<<EOF"
              echo "${{ inputs.image-tags-config }}"
              echo EOF
            fi

            echo "IMAGE_REPOS<<EOF"
            echo "${{ inputs.image-repos }}" | tr ';' '\n'
            echo EOF

            echo "IMAGE_FLAVORS<<EOF"
            echo "${{ inputs.image-flavor-config }}" | tr ';' '\n'
            echo EOF
          ) >> ${GITHUB_OUTPUT}

      - name: Extract image metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.build-args.outputs.IMAGE_REPOS }}
          tags: ${{ steps.build-args.outputs.IMAGE_TAGS }}
          flavor: ${{ steps.build-args.outputs.IMAGE_FLAVORS }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          file: ${{ inputs.dockerfile }}
          tags: ${{ steps.metadata.outputs.tags }}
          annotations: ${{ steps.metadata.outputs.annotations }}
          labels: ${{ steps.metadata.outputs.labels }}
          push: ${{ inputs.push }}
          context: .
          platforms: ${{ inputs.build-platforms }}
          build-args: |
            BASE_IMAGE=${{ inputs.base-image }}
