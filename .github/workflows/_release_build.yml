name: Release Step (Build Image)
run-name: |
  release (build) [${{github.ref_type == 'branch' && 'nightly' || 'stable'}}, ${{github.ref_name}}]

on:
  workflow_call:

  workflow_dispatch:

concurrency:
  group: release-${{github.ref}}-build

permissions:
  contents: read
  packages: write

env:
  CLONE_DIR: src/repo

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      CLONE_DIR: ${{ steps.config.outputs.CLONE_DIR }}
      DOCKER_BASE_IMAGE: ${{ steps.config.outputs.DOCKER_BASE_IMAGE }}
      DOCKER_TAGS_CONFIG: ${{ steps.config.outputs.DOCKER_TAGS_CONFIG }}
      DOCKER_FLAVOR_CONFIG: ${{ steps.config.outputs.DOCKER_FLAVOR_CONFIG }}
      DOCKER_BUILD_PLATFORMS: ${{ steps.config.outputs.DOCKER_BUILD_PLATFORMS }}
      LOGIN_DOCKERHUB: ${{ steps.config.outputs.LOGIN_DOCKERHUB }}
      LOGIN_GITHUB: ${{ steps.config.outputs.LOGIN_GITHUB }}
      PRERELEASE_REPO: ${{ steps.config.outputs.PRERELEASE_REPO }}
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true

      - name: Configure workflow
        id: config
        shell: python
        run: |
          import sys
          sys.path.insert(0, "${{ env.CLONE_DIR }}/.github")
          from workflows_pyconfig import configure
          configure(
            github="""${{ toJson(github) }}""",
            outputs="""\
              CLONE_DIR = cfg.build.clone_dir
              DOCKER_BASE_IMAGE = cfg.release.base_image
              DOCKER_TAGS_CONFIG = cfg.release.tags_config
              DOCKER_FLAVOR_CONFIG = cfg.release.flavor_config
              DOCKER_BUILD_PLATFORMS = cfg.release.build_platforms_config
              LOGIN_DOCKERHUB = cfg.release.login_prerel.dockerhub
              LOGIN_GITHUB = cfg.release.login_prerel.github
              PRERELEASE_REPO = cfg.release.prerelease_repo
            """)

  build:
    needs: config
    uses: ./.github/workflows/image_builder.yml
    with:
      base-image: ${{ needs.config.outputs.DOCKER_BASE_IMAGE }}
      build-platforms: ${{ needs.config.outputs.DOCKER_BUILD_PLATFORMS }}
      dockerfile: ${{ needs.config.outputs.CLONE_DIR }}/docker/Dockerfile
      image-repos: ${{ needs.config.outputs.PRERELEASE_REPO }}
      image-tags-config: ${{ needs.config.outputs.DOCKER_TAGS_CONFIG }}
      image-flavor-config: ${{ needs.config.outputs.DOCKER_FLAVOR_CONFIG }}
      login-github: ${{ needs.config.outputs.LOGIN_GITHUB }}
      login-dockerhub: ${{ needs.config.outputs.LOGIN_DOCKERHUB }}
      push: true

