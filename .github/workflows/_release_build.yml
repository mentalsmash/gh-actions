name: Release Step (Build Image)
run-name: |
  release (build) [${{github.ref_type == 'branch' && 'nightly' || 'stable'}}, ${{github.ref_name}}]

on:
  workflow_call:

  workflow_dispatch:

concurrency:
  group: release-${{github.ref}}-build

permissions:
  contents: read
  packages: write

env:
  CLONE_DIR: src/repo

jobs:
  config:
    runs-on: ubuntu-latest
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true

      - name: Load configuration
        uses: mentalsmash/actions/pyconfig/configuration@master
        with:
          clone-dir: ${{ env.CLONE_DIR }}
          workflow: release_test

      - name: Configure workflow
        id: config
        run: 
          (
            echo CLONE_DIR=$(jq '.build.clone_dir' -jr .pyconfig.json)
            echo DOCKER_BASE_IMAGE=$(jq '.release.base_image' -jr .pyconfig.json)
            echo "DOCKER_TAGS_CONFIG<<EOF"
            jq '.release.tags_config' -jr .pyconfig.json
            echo EOF
            echo "DOCKER_FLAVOR_CONFIG=EOF"
            jq '.release.flavor_config' -jr .pyconfig.json
            echo EOF
            echo DOCKER_BUILD_PLATFORMS=$(jq '.release.build_platforms_config' -jr .pyconfig.json)
            echo LOGIN_DOCKERHUB=$(jq '.release.login_prerel.dockerhub' -jr .pyconfig.json)
            echo LOGIN_GITHUB=$(jq '.release.login_prerel.github' -jr .pyconfig.json)
            echo PRERELEASE_REPO=$(jq '.release.prerelease_repo' -jr .pyconfig.json)
          ) >> ${GITHUB_OUTPUT}
      
      - name: Build image
        uses: mentalsmash/actions/docker/builder@master
        with:
          base-image: ${{ steps.config.outputs.DOCKER_BASE_IMAGE }}
          build-platforms: ${{ steps.config.outputs.DOCKER_BUILD_PLATFORMS }}
          dockerfile: ${{ env.CLONE_DIR }}/docker/Dockerfile
          context: ${{ env.CLONE_DIR }}
          image-repos: ${{ steps.config.outputs.PRERELEASE_REPO }}
          image-tags-config: ${{ steps.config.outputs.DOCKER_TAGS_CONFIG }}
          image-flavor-config: ${{ steps.config.outputs.DOCKER_FLAVOR_CONFIG }}
          github-token: ${{ steps.config.outputs.LOGIN_GITHUB && secrets.GITHUB_TOKEN || '' }}
          github-user: ${{ steps.config.outputs.LOGIN_GITHUB && github.actor || '' }}
          dockerhub-token: ${{ steps.config.outputs.LOGIN_DOCKERHUB && secrets.DOCKERHUB_TOKEN || '' }}
          dockerhub-user: ${{ steps.config.outputs.LOGIN_DOCKERHUB && secrets.DOCKERHUB_USERNAME || '' }}
          action: push
