name: Release (Cleanup - Jobs)
run-name: |
  release cleanup (jobs) [${{github.ref_type == 'tag' && 'stable' || 'nightly' }}, ${{github.ref_name}}]

on:
  workflow_dispatch:

  workflow_call:

  # workflow_run:
  #   workflows: ["Release"]
  #   types: [completed]
  #   branches: [master]

concurrency:
  group: release-cleanup-${{github.ref_type == 'tag' && 'stable' || 'nightly' }}
  cancel-in-progress: false

permissions:
  actions: write
  packages: read

env:
  CLONE_DIR: src/repo

jobs:
  cleanup:
    # if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true

      - name: Load configuration
        uses: mentalsmash/actions/pyconfig/configuration@master
        with:
          clone-dir: ${{ env.CLONE_DIR }}
  
      - name: Configure workflow
        id: config
        run: |
          (
            printf -- "ADMIN_IMAGE=%s\n" "$(jq '.ci.images.admin.image' -r pyconfig.json)"
            printf -- "LOGIN_DOCKERHUB=%s\n" "$(jq '.ci.images.admin.login.dockerhub' -r pyconfig.json)"
            printf -- "LOGIN_GITHUB=%s\n" "$(jq '.ci.images.admin.login.github' -r pyconfig.json)"
          ) | tee -a ${GITHUB_OUTPUT}

      - name: "Clean up workflow runs"
        uses: mentalsmash/actions/ci/admin@master
        with:
          image: ${{ steps.config.outputs.ADMIN_IMAGE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          github-token: ${{ steps.config.outputs.LOGIN_GITHUB && secrets.GITHUB_TOKEN || '' }}
          github-user: ${{ steps.config.outputs.LOGIN_GITHUB && github.actor || '' }}
          dockerhub-token: ${{ steps.config.outputs.LOGIN_DOCKERHUB && secrets.DOCKERHUB_TOKEN || '' }}
          dockerhub-user: ${{ steps.config.outputs.LOGIN_DOCKERHUB && secrets.DOCKERHUB_USERNAME || '' }}
          args: |
            -c
            ${{ github.run_id }}
            nightly-cleanup
            -r
            ${{ github.repository }}

