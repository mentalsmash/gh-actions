name: Docker Build (tester)
run-name: |
  docker build [tester]

on:
  workflow_dispatch:

  workflow_call:

  push:
    branches:
      - master
    paths:
      - docker/tester/**
      - .github/workflows/image_build_tester.yml
      - .github/workflows_pyconfig/settings.*

concurrency:
  group: image-build-tester
  cancel-in-progress: true

permissions:
  packages: write
  contents: read

env:
  CLONE_DIR: src/repo

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      CLONE_DIR: ${{ steps.config.outputs.CLONE_DIR }}
      TESTER_IMAGE_BASE_IMAGE_MATRIX: ${{ steps.config.outputs.TESTER_IMAGE_BASE_IMAGE_MATRIX }}
      TESTER_IMAGE_BUILD_PLATFORMS: ${{ steps.config.outputs.TESTER_IMAGE_BUILD_PLATFORMS }}
      TESTER_IMAGE_REPO: ${{ steps.config.outputs.TESTER_IMAGE_REPO }}
      LOGIN_DOCKERHUB: ${{ steps.config.outputs.LOGIN_DOCKERHUB }}
      LOGIN_GITHUB: ${{ steps.config.outputs.LOGIN_GITHUB }}
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true
      
      - name: Load configuration
        uses: mentalsmash/actions/pyconfig/configuration@master
        with:
          clone-dir: ${{ env.CLONE_DIR }}
  
      - name: Configure workflow
        id: config
        run: |
          (
            echo CLONE_DIR=$(jq '.build.clone_dir' -r pyconfig.json)
            echo TESTER_IMAGE_REPO=$(jq '.ci.images.tester.repo' -r pyconfig.json)
            echo TESTER_IMAGE_BUILD_PLATFORMS=$(jq '.ci.images.tester.build_platforms_config' -r pyconfig.json)
            echo TESTER_IMAGE_BASE_IMAGE_MATRIX=$(jq '.ci.images.tester.base_images_matrix' -r pyconfig.json)
            echo LOGIN_GITHUB=$(jq '.ci.images.tester.login.github' -r pyconfig.json)
            echo LOGIN_DOCKERHUB=$(jq '.ci.images.tester.login.dockerhub' -r pyconfig.json)
          ) | tee -a ${GITHUB_OUTPUT}

  build:
    needs:
      - config
    strategy:
      matrix:
        base-image: ${{ fromJson(needs.config.outputs.TESTER_IMAGE_BASE_IMAGE_MATRIX) }}
    runs-on: ubuntu-latest
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true

      - name: Build image
        uses: mentalsmash/actions/docker/builder@master
        with:
          base-image: ${{ matrix.base-image }}
          build-platforms: ${{ needs.config.outputs.TESTER_IMAGE_BUILD_PLATFORMS }}
          dockerfile: ${{ needs.config.outputs.CLONE_DIR }}/docker/tester/Dockerfile
          context: ${{ needs.config.outputs.CLONE_DIR }}
          image-repos: ${{ needs.config.outputs.TESTER_IMAGE_REPO }}
          github-token: ${{ needs.config.outputs.LOGIN_GITHUB && secrets.GITHUB_TOKEN || '' }}
          github-user: ${{ needs.config.outputs.LOGIN_GITHUB && github.actor || '' }}
          dockerhub-token: ${{ needs.config.outputs.LOGIN_DOCKERHUB && secrets.DOCKERHUB_TOKEN || '' }}
          dockerhub-user: ${{ needs.config.outputs.LOGIN_DOCKERHUB && secrets.DOCKERHUB_USERNAME || '' }}
          action: push
