name: Release (Cleanup - Prerelease)
run-name: |
  release cleanup (prerelease) [${{github.ref_type == 'tag' && 'stable' || 'nightly' }}, ${{github.ref_name}}]

on:
  workflow_dispatch:

  workflow_call:

concurrency:
  group: release-cleanup-prerelease-${{github.ref_type == 'tag' && 'stable' || 'nightly' }}
  cancel-in-progress: false

permissions:
  contents: read
  packages: write

env:
  CLONE_DIR: src/repo

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true

      - name: Load configuration
        uses: mentalsmash/actions/pyconfig/configuration@master
        with:
          clone-dir: ${{ env.CLONE_DIR }}

      - name: Configure workflow
        id: config
        run: |
          (
            printf -- "ADMIN_IMAGE=%s\n" "$(jq '.ci.images.admin.image' -r pyconfig.json)"
            printf -- "PRERELEASE_PACKAGE=%s\n" "$(jq '.release.prerelease_package' -j pyconfig.json)"
            printf -- "PRERELEASE_PACKAGE_ORG=%s\n" "$(jq '.release.prerelease_package_org' -j pyconfig.json)"
            printf -- "LOGIN_DOCKERHUB=%s\n" "$(jq '.ci.images.admin.login.dockerhub' -r pyconfig.json)"
            printf -- "LOGIN_GITHUB=%s\n" "$(jq '.ci.images.admin.login.github' -r pyconfig.json)"
          ) | tee -a ${GITHUB_OUTPUT}
      
      - name: Delete all versions of the prerelease package
        if: steps.config.outputs.PRERELEASE_PACKAGE
        uses: mentalsmash/actions/ci/admin@master
        with:
          image: ${{ steps.config.outputs.ADMIN_IMAGE }}
          token: ${{ secrets.PACKAGE_VERSIONS_PAT }}
          github-token: ${{ steps.config.outputs.LOGIN_GITHUB && secrets.GITHUB_TOKEN || '' }}
          github-user: ${{ steps.config.outputs.LOGIN_GITHUB && github.actor || '' }}
          dockerhub-token: ${{ steps.config.outputs.LOGIN_DOCKERHUB && secrets.DOCKERHUB_TOKEN || '' }}
          dockerhub-user: ${{ steps.config.outputs.LOGIN_DOCKERHUB && secrets.DOCKERHUB_USERNAME || '' }}
          args: |
            -c
            ${{ github.run_id }}
            delete-versions
            -o
            ${{ steps.config.outputs.PRERELEASE_PACKAGE_ORG }}
            -p
            ${{ steps.config.outputs.PRERELEASE_PACKAGE }}
            --if-package-exists
