name: Release Step (Summary)
run-name: |
  release (summary) [${{github.ref_type == 'branch' && 'nightly' || 'stable'}}, ${{github.ref_name}}]

concurrency:
  group: release-${{github.ref_type == 'branch' && 'nightly' || 'stable'}}-${{github.ref}}-summary

on:
  workflow_call:

  workflow_dispatch:

env:
  CLONE_DIR: src/repo
  TRACKER_DIR: src/tracker

jobs:
  summarize:
    runs-on: ubuntu-latest
    steps:
    - name: Clone source repository
      uses: actions/checkout@v4
      with:
        path: ${{ env.CLONE_DIR }}
        submodules: true

    - name: Load configuration
      uses: mentalsmash/actions/pyconfig/configuration@master
      with:
        clone-dir: ${{ env.CLONE_DIR }}

    - name: Configure workflow
      id: config
      run: |
        (
          echo BADGE_BASE_IMAGE_COLOR=$(jq '.release.badge.base_image.color' -r pyconfig.json)
          echo BADGE_BASE_IMAGE_FILENAME=$(jq '.release.badge.base_image.filename' -r pyconfig.json)
          echo BADGE_BASE_IMAGE_GIST=$(jq '.release.badge.base_image.gist' -r pyconfig.json)
          echo BADGE_BASE_IMAGE_MESSAGE=$(jq '.release.badge.base_image.message' -r pyconfig.json)
          echo BADGE_VERSION_COLOR=$(jq '.release.badge.version.color' -r pyconfig.json)
          echo BADGE_VERSION_FILENAME=$(jq '.release.badge.version.filename' -r pyconfig.json)
          echo BADGE_VERSION_GIST=$(jq '.release.badge.version.gist' -r pyconfig.json)
          echo BADGE_VERSION_MESSAGE=$(jq '.release.badge.version.message' -r pyconfig.json)
          echo BUILD_PROFILE=$(jq '.build.profile' -r pyconfig.json)
          echo BUILD_VERSION=$(jq '.build.version' -r pyconfig.json)
          echo DEB_ARTIFACTS_PREFIX=$(jq '.debian.artifacts.prefix' -r pyconfig.json)
          echo "RELEASE_FINAL_IMAGES<<EOF"
          printf -- "%s\n" "$(jq '.release.final_images' -r pyconfig.json)"
          echo EOF
          echo TRACKER_USER_NAME=$(jq '.release.tracker.user.name' -r pyconfig.json)
          echo TRACKER_USER_EMAIL=$(jq '.release.tracker.user.email' -r pyconfig.json)
          echo TRACKER_REPO=$(jq '.release.tracker.repository' -r pyconfig.json)
        ) | tee -a ${GITHUB_OUTPUT}

    - name: Clone release tracker
      uses: mentalsmash/actions/release-tracker/checkout@master
      with:
        repository: ${{ steps.config.outputs.TRACKER_REPO }}
        path: ${{ env.TRACKER_DIR }}
        user-name: ${{ steps.config.outputs.TRACKER_USER_NAME }}
        user-email: ${{ steps.config.outputs.TRACKER_USER_EMAIL }}
        token: ${{ secrets.RELEASE_TRACKER_REPO_PAT }}

    - name: Create and push release tracker entry
      uses: mentalsmash/actions/release-tracker/add-docker@master
      with:
        repository: ${{ steps.config.outputs.TRACKER_REPO }}
        path: ${{ env.TRACKER_DIR }}
        track: ${{ steps.config.outputs.BUILD_PROFILE }}
        version: ${{ steps.config.outputs.BUILD_VERSION }}
        images: ${{ steps.config.outputs.RELEASE_FINAL_IMAGES }}

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: ${{ steps.config.outputs.DEB_ARTIFACTS_PREFIX }}*
        path: ${{ github.workspace }}/artifacts
        merge-multiple: true
    
    - name: Generate summary
      uses: mentalsmash/actions/pyconfig/summary@master
      with:
        clone-dir: ${{ env.CLONE_DIR }}
        workflow: release_summary

    - name: Update version badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        label: version
        auth: ${{ secrets.GIST_UPDATE_TOKEN }}
        color: ${{ steps.config.outputs.BADGE_VERSION_COLOR }}
        filename: ${{ steps.config.outputs.BADGE_VERSION_FILENAME }}
        gistID: ${{ steps.config.outputs.BADGE_VERSION_GIST }}
        message: ${{ steps.config.outputs.BADGE_VERSION_MESSAGE }}

    - name: Update base image badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        label: base image
        auth: ${{ secrets.GIST_UPDATE_TOKEN }}
        color: ${{ steps.config.outputs.BADGE_BASE_COLOR }}
        filename: ${{ steps.config.outputs.BADGE_BASE_IMAGE_FILENAME }}
        gistID: ${{ steps.config.outputs.BADGE_BASE_IMAGE_GIST }}
        message: ${{ steps.config.outputs.BADGE_BASE_IMAGE_MESSGE }}
