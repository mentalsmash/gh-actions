name: Release
run-name: |
  release [${{github.ref_type == 'tag' && 'stable' || 'nightly' }}, ${{github.ref_name}}]

on:
  push:
    branches:
      - master
    tags:
      - '*'
      - '!*/**'

concurrency:
  group: release-${{github.ref_type == 'tag' && 'stable' || 'nightly' }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: write

env:
  # [IMPLEMENTME] Configure variables
  #############################################################################
  # Generated image settings
  #############################################################################
  # Base image for the pre-release image
  BASE_TAG: ubuntu:22.04
  # Build platforms for the pre-release and final images
  BUILD_PLATFORMS: linux/amd64,linux/arm64
  # Push pre-release image to GitHub for testing
  PRERELEASE_TAG: ghcr.io/${{ github.repository }}-test
  # Image tag for the final release image.
  # Published to both GitHub and DockerHub
  RELEASE_TAGS: |
    ghcr.io/${{github.repository}}
    ${{github.repository}}
  # Add an arbitrary suffix to the image tags
  TAG_SUFFIX: ''
  #############################################################################
  # Release badges settings
  #############################################################################
  # Gist IDs for the JSON objects backing release badges
  BADGE_NIGHTLY_BASE_IMG: "1fd45f442b8ab91bef6ef56423368128"
  BADGE_NIGHTLY_VERSION:  "9653c15d4e5b0413fb71397e643ab822"
  BADGE_STABLE_BASE_IMG:  "6391e3a762e26c822281b1dbf2af5bd1"
  BADGE_STABLE_VERSION:   "2fda06b2047d0643d91308462197110a"
  #############################################################################
  # Local workflow settings 
  #############################################################################
  # Local directory where to clone the repository
  CLONE_DIR: src/repo
jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      # Gist ID for the "base image" release badge
      BADGE_BASE_IMG: ${{steps.config.outputs.BADGE_BASE_IMG}}
      # Gist ID for the "version" release badge
      BADGE_VERSION: ${{steps.config.outputs.BADGE_VERSION}}
      # Re-exported env BASE_TAG
      BASE_TAG: ${{steps.config.outputs.BASE_TAG}}
      # Re-exported env PRERELEASE_TAG
      PRERELEASE_TAG: ${{steps.config.outputs.PRERELEASE_TAG}}
      # Registry where the pre-release image is published
      PRERELEASE_REGISTRY: ${{steps.config.outputs.PRERELEASE_REGISTRY}}
      # Build platforms for the pre-release image and the final image
      DOCKER_BUILD_PLATFORMS: ${{ steps.config.outputs.DOCKER_BUILD_PLATFORMS}}
      # "flavor" configuration for docker/metadata-action
      DOCKER_FLAVOR_CONFIG: ${{steps.config.outputs.DOCKER_FLAVOR_CONFIG}}
      # "tags" configuration for docker/metadata-action
      DOCKER_TAGS_CONFIG: ${{steps.config.outputs.DOCKER_TAGS_CONFIG}}
      # Pre-release image, full tag
      PRERELEASE_IMAGE: ${{ steps.config.outputs.PRERELEASE_IMAGE }}
      # Push the final release image to DockerHub
      RELEASE_TO_DOCKERHUB: ${{steps.config.outputs.RELEASE_TO_DOCKERHUB}}
      # Push the final relase image to GitHUb
      RELEASE_TO_GITHUB: ${{steps.config.outputs.RELEASE_TO_GITHUB}}
      # JSON array with the platforms where to test the pre-release image
      TEST_PLATFORMS: ${{steps.config.outputs.TEST_PLATFORMS}}
      # Re-exported env RELEASE_TAGS
      RELEASE_TAGS: ${{steps.config.outputs.RELEASE_TAGS}}
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true

      - name: Validate code
        run: |
          echo "Linting code..."

          # TODO validate code changes here

      - name: Configure build
        id: config
        shell: python
        run: |
          import sys
          sys.path.insert(0, "${{ env.CLONE_DIR }}/scripts")
          from action_helpers.workflows.release import configure
          
          configure(
            badge_nightly_base_image="${{env.BADGE_NIGHTLY_BASE_IMG}}",
            badge_nightly_version="${{env.BADGE_NIGHTLY_VERSION}}",
            badge_stable_base_image="${{env.BADGE_STABLE_VERSION}}",
            badge_stable_version="${{env.BADGE_STABLE_VERSION}}",
            build_platforms="${{env.BUILD_PLATFORMS}}",
            base_tag="${{env.BASE_TAG}}",
            prerelease_tag="${{env.PRERELEASE_TAG}}",
            ref_type="${{github.ref_type}}",
            release_tags="""\
              ${{env.RELEASE_TAGS}}
            """,
            tag_suffix="${{env.TAG_SUFFIX}}")
  
  build:
    needs: config
    uses: ./.github/workflows/_release_build.yml
    secrets: inherit
    with:
      base-tag: ${{ needs.config.outputs.BASE_TAG }}
      build-tag: ${{ needs.config.outputs.PRERELEASE_TAG }}
      build-tag-platforms: ${{ needs.config.outputs.DOCKER_BUILD_PLATFORMS }}
      build-tag-registry: ${{ needs.config.outputs.PRERELEASE_REGISTRY }}
      docker-tags-config: ${{ needs.config.outputs.DOCKER_TAGS_CONFIG }}
      docker-flavor-config: ${{ needs.config.outputs.DOCKER_FLAVOR_CONFIG }}

  test:
    needs:
      - config
      - build
    strategy:
      matrix:
        test-platform: ${{ fromJson(needs.config.outputs.TEST_PLATFORMS) }}
    uses: ./.github/workflows/_release_test.yml
    secrets: inherit
    with:
      test-tag: ${{ needs.config.outputs.PRERELEASE_IMAGE }}
      test-tag-registry: ${{ needs.config.outputs.PRERELEASE_REGISTRY }}
      test-platform: ${{ matrix.test-platform }}

  push:
    needs:
      - config
      - test
    uses: ./.github/workflows/_release_push.yml
    secrets: inherit
    with:
      docker-tags-config: ${{ needs.config.outputs.DOCKER_TAGS_CONFIG }}
      docker-flavor-config: ${{ needs.config.outputs.DOCKER_FLAVOR_CONFIG }}
      release-tags: ${{ needs.config.outputs.RELEASE_TAGS }}
      release-tag-platforms: ${{ needs.config.outputs.DOCKER_BUILD_PLATFORMS }}
      test-tag: ${{ needs.config.outputs.PRERELEASE_IMAGE }}
      test-tag-registry: ${{ needs.config.outputs.PRERELEASE_REGISTRY }}

  update_badges:
    needs:
      - config
      - push
    uses: ./.github/workflows/_release_badges.yml
    secrets: inherit
    with:
      base-image: ${{ needs.config.outputs.BASE_TAG }}
      badge-version: ${{ needs.config.outputs.BADGE_VERSION }}
      badge-base-img: ${{ needs.config.outputs.BADGE_BASE_IMG }}

  deb_release:
    needs:
      - config
      - test
    uses: ./.github/workflows/deb_release.yml
    secrets: inherit
