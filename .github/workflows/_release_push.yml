name: Release Step (Push Image)
run-name: |
  release (push [${{github.ref_type == 'branch' && 'nightly' || 'stable'}} image, ${{github.ref_name}}]

on:
  workflow_call:

  workflow_dispatch:

concurrency:
  group: release-${{github.ref_type == 'branch' && 'nightly' || 'stable'}}-${{ github.ref }}-push-images

env:
  CLONE_DIR: src/repo

permissions:
  contents: read
  packages: write

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true

      - name: Configure workflow
        id: config
        shell: python
        run: |
          import sys
          sys.path.insert(0, "${{ env.CLONE_DIR }}/.github")
          from workflows_pyconfig import configure
          configure(
            github="""${{ toJson(github) }}""",
            outputs="""\
              DOCKER_BUILD_PLATFORMS = cfg.release.build_platforms_config
              DOCKER_FLAVOR_CONFIG = cfg.release.flavor_config
              DOCKER_TAGS_CONFIG = cfg.release.tags_config
              LOGIN_DOCKERHUB = cfg.release.login.dockerhub
              LOGIN_GITHUB = cfg.release.login.github
              PRERELEASE_IMAGE = cfg.release.prerelease_image
              RELEASE_REPOS = cfg.release.final_repos_config
            """)

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
 
      - name: Extract image metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.config.outputs.RELEASE_REPOS }}
          tags: ${{ steps.config.outputs.DOCKER_TAGS_CONFIG }}
          flavor: ${{ steps.config.outputs.DOCKER_FLAVOR_CONFIG }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
    
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ steps.config.outputs.LOGIN_DOCKERHUB }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Log in to GitHub
        uses: docker/login-action@v3
        if: ${{ steps.config.outputs.LOGIN_GITHUB }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Build and push images to GitHub
        uses: docker/build-push-action@v5
        with:
          file: ${{ env.CLONE_DIR }}/docker/release/Dockerfile
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          annotations: ${{ steps.metadata.outputs.annotations }}
          push: true
          context: ${{ env.CLONE_DIR }}
          platforms: ${{ steps.config.outputs.RELEASE_PLATFORMS }}
          build-args: |
            BASE_IMAGE=${{ steps.config.outputs.PRERELEASE_IMAGE }}
