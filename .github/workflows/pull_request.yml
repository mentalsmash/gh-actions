name: Pull Request
run-name: |
  PR #${{ github.event.pull_request.number }} [${{ github.event_name == 'pull_request' && 'updated' || 'reviewed' }}, ${{ github.event_name == 'pull_request' && github.event.action || github.event.review.state }}${{ github.event.pull_request.draft && ', draft' || '' }}] ${{github.event.pull_request.title}}

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      # No sense in doing these tests for these file
      - 'README.md'
      - 'docs/**/*'
    types:
      - opened
      - synchronize
      - ready_for_review
      - converted_to_draft

  pull_request_review:
    types: [submitted]

concurrency:
  group: pr-test-${{ github.ref }}-${{github.event_name}}
  cancel-in-progress: true

permissions:
  packages: read
  contents: read

env:
  CLONE_DIR: src/repo

jobs:
  check-trigger:
    runs-on: ubuntu-latest
    outputs:
      BASIC_VALIDATION_BUILD_PLATFORMS: ${{ steps.config.outputs.BASIC_VALIDATION_BUILD_PLATFORMS }}
      BASIC_VALIDATION_BASE_IMAGES: ${{ steps.config.outputs.BASIC_VALIDATION_BASE_IMAGES }}
      DEB_VALIDATION_BASE_IMAGES: ${{ steps.config.outputs.DEB_VALIDATION_BASE_IMAGES }}
      DEB_VALIDATION_BUILD_ARCHITECTURES: ${{ steps.config.outputs.DEB_VALIDATION_BUILD_ARCHITECTURES }}
      FULL_VALIDATION_BASE_IMAGES: ${{ steps.config.outputs.FULL_VALIDATION_BASE_IMAGES }}
      FULL_VALIDATION_BUILD_PLATFORMS: ${{ steps.config.outputs.FULL_VALIDATION_BUILD_PLATFORMS }}
      VALIDATE_BASIC: ${{ steps.config.outputs.VALIDATE_BASIC }}
      VALIDATE_DEB: ${{ steps.config.outputs.VALIDATE_DEB }}
      VALIDATE_FULL: ${{ steps.config.outputs.VALIDATE_FULL }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.CLONE_DIR }}
          submodules: true

      - name: Load configuration
        uses: mentalsmash/actions/pyconfig/configuration@master
        with:
          clone-dir: ${{ env.CLONE_DIR }}
          workflow: pull_request
  
      - name: Configure workflow
        id: config
        run: 
          (
            BASIC_VALIDATION_BASE_IMAGES=$(jq '.BASIC_VALIDATION_BASE_IMAGES' -j pyconfig.json)
            BASIC_VALIDATION_BUILD_PLATFORMS=$(jq '.BASIC_VALIDATION_BUILD_PLATFORMS' -j pyconfig.json)
            DEB_VALIDATION_BASE_IMAGES=$(jq '.DEB_VALIDATION_BASE_IMAGES' -j pyconfig.json)
            DEB_VALIDATION_BUILD_ARCHITECTURES=$(jq '.DEB_VALIDATION_BUILD_ARCHITECTURES' -j pyconfig.json)
            FULL_VALIDATION_BASE_IMAGES=$(jq '.FULL_VALIDATION_BASE_IMAGES' -j pyconfig.json)
            FULL_VALIDATION_BUILD_PLATFORMS=$(jq '.FULL_VALIDATION_BUILD_PLATFORMS' -j pyconfig.json)
            VALIDATE_BASIC=$(jq '.VALIDATE_BASIC' -j pyconfig.json)
            VALIDATE_DEB=$(jq '.VALIDATE_DEB' -j pyconfig.json)
            VALIDATE_FULL=$(jq '.VALIDATE_FULL' -j pyconfig.json)
          ) >> ${GITHUB_OUTPUT}

  basic-validation:
    needs: check-trigger
    if: ${{ needs.check-trigger.outputs.VALIDATE_BASIC }}
    strategy:
      matrix:
        build-platform: ${{ fromJson(needs.check-trigger.outputs.BASIC_VALIDATION_BUILD_PLATFORMS) }}
        base-image: ${{ fromJson(needs.check-trigger.outputs.BASIC_VALIDATION_BASE_IMAGES) }}
    uses: ./.github/workflows/_ci_build.yml
    secrets: inherit
    with:
      build-platform: ${{matrix.build-platform}}
      base-image: ${{matrix.base-image}}

  full-validation:
    needs: check-trigger
    if: ${{ needs.check-trigger.outputs.VALIDATE_FULL }}
    strategy:
      matrix:
        build-platform: ${{ fromJson(needs.check-trigger.outputs.FULL_VALIDATION_BUILD_PLATFORMS) }}
        base-image: ${{ fromJson(needs.check-trigger.outputs.FULL_VALIDATION_BASE_IMAGES) }}
        # [IMPLEMENTME] These values are "hard-coded" and must be updated manually here
        exclude:
          - build-platform: amd64
            base-image: "ubuntu:22.04"
    uses: ./.github/workflows/_ci_build.yml
    secrets: inherit
    with:
      build-platform: ${{matrix.build-platform}}
      base-image: ${{matrix.base-image}}

  deb-validation:
    needs: check-trigger
    if: ${{ needs.check-trigger.outputs.VALIDATE_DEB }}
    strategy:
      matrix:
        build-architecture: ${{ fromJson(needs.check-trigger.outputs.DEB_VALIDATION_BUILD_ARCHITECTURES) }}
        base-image: ${{ fromJson(needs.check-trigger.outputs.DEB_VALIDATION_BASE_IMAGES) }}
    uses: ./.github/workflows/_deb_build.yml
    secrets: inherit
    with:
      base-image: ${{ matrix.base-image }}
      build-architecture: ${{ matrix.build-architecture }}

